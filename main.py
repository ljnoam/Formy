import pandas as pd
from nlp.extractor import extract_info
from nlp.matcher import match_formations

def main():
    print("üß† Bienvenue sur Formy !")
    user_input = input("Dis-moi ce que tu veux apprendre : ")

    # 1) NLP
    profile = extract_info(user_input)
    print(f"\n‚úÖ Profil d√©tect√© : {profile}")

    # 2) Dataset
    df = pd.read_csv("formations_dataset_10000_clean.csv")
    formations = df.to_dict(orient="records")
    print(f"üìÇ {len(formations)} formations charg√©es depuis le CSV.")

    # 3) Matching
    print("\nüîç Recherche des meilleures formations‚Ä¶\n")
    matched = match_formations(profile, formations)

    # 4) R√©sultat
    if not matched:
        print("‚ùå Aucune formation trouv√©e avec ces crit√®res.")
        return

    print("üéØ Formations recommand√©es :\n")
    for i, f in enumerate(matched, 1):
        succes = f.get("taux_de_succ√®s") or f.get("taux_de_succes") or "N/A"
        score = f.get("_score", "N/A")
        reasons = f.get("_reasons", [])
        reason_cols = ", ".join({col for col, _ in reasons}) if reasons else "N/A"

        print(f"{i}. {f.get('titre', 'Titre inconnu')}")
        print(f"   Th√©matique   : {f.get('th√©matique')} / {f.get('sous-th√©matique')}")
        print(f"   Niveau       : {f.get('niveau')} ({f.get('public_cible')})")
        print(f"   Format       : {f.get('format')} | Langue : {f.get('langue')}")
        print(f"   Certification: {f.get('certification')} | Plateforme : {f.get('plateforme_source')}")
        print(f"   Prix         : {f.get('prix')}‚Ç¨ | Mis √† jour : {f.get('date_mise_a_jour')}")
        print(f"   Objectif     : {f.get('objectif_p√©dagogique')}")
        print(f"   Note         : {f.get('note_utilisateurs')} ‚≠ê ({f.get('nombre_avis')} avis)")
        print(f"   Succ√®s       : {succes}%")
        print(f"   üîé Score      : {score} (colonnes match√©es : {reason_cols})\n")

if __name__ == "__main__":
    main()
